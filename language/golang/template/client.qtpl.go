// Code generated by qtc from "client.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package template

import "github.com/iancoleman/strcase"

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func StreamClient(qw422016 *qt422016.Writer, names []string) {
	qw422016.N().S(`
import "github.com/durudex/go-polybase"

type Client struct {
`)
	for _, name := range names {
		qw422016.N().S(`	`)
		qw422016.E().S(strcase.ToCamel(name))
		qw422016.N().S(` I`)
		qw422016.E().S(strcase.ToCamel(name))
		qw422016.N().S(`
`)
	}
	qw422016.N().S(`}

func New(db polybase.Polybase) *Client {
	return &Client{
`)
	for _, name := range names {
		qw422016.N().S(`		`)
		qw422016.E().S(strcase.ToCamel(name))
		qw422016.N().S(`: New`)
		qw422016.E().S(strcase.ToCamel(name))
		qw422016.N().S(`(db),
`)
	}
	qw422016.N().S(`	}
}
`)
}

func WriteClient(qq422016 qtio422016.Writer, names []string) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	StreamClient(qw422016, names)
	qt422016.ReleaseWriter(qw422016)
}

func Client(names []string) string {
	qb422016 := qt422016.AcquireByteBuffer()
	WriteClient(qb422016, names)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
